
COMPILADORES 

Comodidad en la compilación de C++ 

Microsoft y Watcom lideran los compiladores de C++ basados en DOS/Windows de este análisis comparativo... ¿y Borland?

RICK GREHAN

Ya no se compra simplemente un compilador de C++.
Bien, de hecho puede hacerse, pero no es lo que más se desea en esta época marcada por los sistemas operativos basados en ventanas.

La compilación de código fuente C o C++ para obtener una aplicación final no es la única operación necesaria; incluso puede que algunas de las otras operaciones sean más complejas que la propia compilación.
A consecuencia de esto, el compilador C++ se ha convertido en una pieza de un entorno formado por una colección coordinada de herramientas, que puede incluir editor de textos, browser , depurador, perfilador, editor de recursos y otros componentes, tantos que todos sus iconos ni tan solo caben en la pantalla más grande.

En esta revisión, hemos analizado cinco entornos C++ destinados a la plataforma Windows: Microsoft Visual Basic C++ 4.0, Watcom C/C++ 10.5, Symantec C++ 7.2 y MetaWare High C/C++ 3.31.
Borland C++ 4.53 sólo ha sido visto brevemente, pues este compilador estaba justo esperando una nueva versión: Borland 5.0 estaba casi listo pero no a tiempo para que lo pudiéramos examinar (pero si estará disponible en el momento en que lea estas líneas).

Base común 

A pesar del esfuerzo que los diseñadores ponen en diferenciar sus productos, la mayoría (excepto MetaWare) proporcionan un hojeador ( browser ).
El de Visual C++, Class View, utiliza el formato de árbol ampliable común a Windows 95, y consiste únicamente en una «vista» de la aplicación que se está creando (otra vista proporciona un árbol similar en el que las hojas son archivos de código fuente).

El hojeador de Symantec surge de la colaboración del editor de jerarquías y del editor de clases.
El primero es una vista, tipo árbol, de la jerarquía de clases; el segundo es un editor, estilo Smalltalk, de tres paneles.
Tanto Symantec como Visual C++ efectúan, en una tarea de fondo, un trabajo de análisis incluso antes de haber ejecutado ninguna compilación.
Esto significa que los editores de jerarquías y de clases pueden empezar a utilizarse una vez los archivos fuente estén incluidos en el proyecto Symantec.

El hojeador de Watcom es más formal.
Consiste en una aplicación independiente que, sin embargo, puede iniciarse desde el interior del entorno integrado de desarrollo (IDE).
El hojeador lee una base de datos creada durante la compilación (siempre que en el proyecto se haya establecido la opción adecuada).
El compilador de Watcom es como el editor de jerarquías de Symantec: permite ir desde un elemento de la ventana del hojeador hasta la ubicación del archivo fuente en la que se define ese elemento.
Pero es necesario para ello que el sistema Watcom llame al editor; en este aspecto, Symantec y Visual C++ están mejor integrados.

MetaWare High C/C++ 3.31 


Ventajas 
- Sólo utiliza 15 MB de espacio de disco (se suministra en disquetes).
- El compilador está actualizado con las especificaciones ANSI más recientes.
- Soporte técnico gratuito.


Inconvenientes 
- Carece de entorno integrado de desarrollo (IDE); es un producto de línea de mandatos.
- Soporte de plataformas reducido; no puede, por ejemplo, crear un ejecutable para Windows NT.
- Precisa componentes adicionales para formar un sistema de desarrollo completo.

Por lo que respecta al compilador High C, todo lo que hemos dicho acerca del IDE se encuentra aquí fuera de la ventana.
High C es simplemente un conjunto de herramientas de línea de mandatos.
El editor está basado en ventanas, al igual que el depurador --lo admitimos-- pero se trata de ventanas con v minúscula, basadas en caracteres.
Podríamos decir que son encantadoramente primitivas, pero este encanto no tarda mucho en desaparecer.
Para colmo, High C ni tan solo aporta su propio enlazador.
MetaWare ofrece gratuitamente un enlazador opcional, pero los ejecutables que crea son sólo compatibles con Windows 3.x.

¿Pueden crearse aplicaciones Windows de 32 bits con High C?
Sin duda que sí, pero también puede utilizarse una pala para quitar la nieve del camino en lugar de una máquina quitanieves.
Además, las aplicaciones de 32 bits que se creen no serán aplicaciones Win32.
MetaWare suministra su propio «supervisor», un programa que actúa de intermediario entre el código de 32 bits del programa y Windows 16 bits.
Por lo tanto, en realidad el destino es Windows 3.x y no Windows NT o 95.

HighC/C++ tiene algunos atributos positivos.
MetaWare ha trabajado para mantener el compilador al último nivel de los estándares ANSI C++, incluyendo el manejo de excepciones, información de tipos en tiempo de ejecución, espacios de nombres...

Además, MetaWare añade al paquete la excelente biblioteca de clases Tools.h++, de Rogue Wave Software.
Esta biblioteca soporta fácilmente aplicaciones multihebra y proporciona clases para manejar almacenamiento persistente, un conjunto de clases creadas según el modelo Smalltalk, e incluso soporte para Windows con clases de E/S para gestionar DDE y el portapapeles.
Hay también una versión DLL de la biblioteca que reduce el tamaño de los ejecutables.

High C/C++ se suministra - también en España- - con soporte técnico gratuito.
Y no es un logro pequeño que el compilador ocupe sólo seis disquetes de alta densidad y no consuma cientos de megabytes de espacio de disco.
El atractivo de esta economía se debilita cuando uno se percata de que el enlazador se ha de obtener de forma separada para tener un sistema de desarrollo completo.
Aunque MegaWave ofrece gratuitamente un enlazador un tanto limitado, nosotros hemos utilizado el enlazador que viene con TNT DOS Extender de Phar Lap (que cuesta unas 100.000 pesetas).

Microsoft Visual C++ 4.0 


Ventajas 
- Entorno de desarrollo altamente integrado y completo.
- Proporciona gestión de software y reutilización mediante la Components Gallery.
- La depuración just-in-time encuentra los errores antes de que el programa falle.


Inconvenientes 
- Es fácil perderse en el IDE.
- El desarrollo en 16 bits requiere un compilador separado (aunque incluido en el paquete).

Puede que se esté preguntando qué ha pasado con Visual C++ 3.0.
Con el fin de alinear el número de versión del compilador con el de la biblioteca de clases Microsoft Foundation Classes (MFC) 4.0, Microsoft ha saltado desde la 2.0 a la 4.0.
MCF 4.0 se incluye en Visual C++ 4.0 y proporciona nuevas funciones, como soporte para Windows Common Controls (suministrados con Windows 95 y NT), integración con el kit de desarrollo de controles OLE y clases para encapsular los Objetos de Acceso de Datos (DAO).
Véase en nuestro recuadro Enfoque Tecnológico el papel de DAO y del motor de base de datos Borland (BDE).

En el IDE de Microsoft, el énfasis se ha puesto en la palabra integrado .
Este IDE, denominado Developer Studio, puede servir como entorno no sólo de Visual C++ sino también de Visual Test y Visual FORTRAN Powerstation.
Tantas posibilidades hacen que nos preocupe la densidad de Developer Studio.

Obviamente, los ingenieros de Microsoft han trabajado para embutir en la pantalla el máximo de funcionalidad.

Visual C++ 4.0 presenta el depósito de objetos Component Gallery (Galería de componentes), que resulta útil a diversos niveles.
En cierto sentido, proporciona un método de gestionar las clases como objetos en lugar de como conglomerados de código fuente, convirtiéndose en una especie de sistema de gestión de código fuente.
Para colocar una clase en una aplicación, simplemente se toma una copia de dicha clase de la galería y se coloca en la aplicación; no es necesario cortar y pegar archivos de cabecera, archivos .cpp , etc .
Además, al utilizar la galería para insertar una clase, se hace algo más que copiar simplemente el código fuente.

Puede, por ejemplo, asociarse un recurso con una clase, y el recurso se añadirá automáticamente al código fuente.

En la galería pueden almacenarse fácilmente OCX de otros proveedores.
Con unos pocos clics de ratón hemos podido instalar de forma rápida un OCX en la galería e insertarlo en una aplicación de prueba.
Visual C++ hizo el trabajo pesado, leyendo el OCX y generando el código fuente de una clase envoltorio ( wrapper ) de C++.

Esta clase incluía los métodos previamente creados que están asociados con las funciones del OCX y las variables públicas de los miembros asociadas con las propiedades de los objetos.

Visual C++ 4.0 incorpora depuración just-in-time .
Si a efectos de depuración se está ejecutando una versión de la aplicación y se produce un error en tiempo de ejecución, el sistema presenta un cuadro de diálogo que permite elegir entre terminar la aplicación o entrar en el depurador (con la ventana de código fuente alineada en la ubicación en la que se ha producido el problema).

Visual C++ 4.0 es, por encima de todo, un producto de 32 bits: puede generar aplicaciones Win32s, NT y Windows 95.

Un CD-ROM independiente incluido en el paquete contiene una copia de Visual C++ 1.52c, que soporta MS-DOS de 16 bits, Windows 3.1 y Windows para Grupos de Trabajo 3.11.

Microsoft ha prometido una versión RISC de C++ 4.0 en NT para las plataformas PowerPC, Mips y Alpha.

Está disponible una edición de desarrollo cruzado para sistemas PowerPC y Macintosh basados en procesadores 680x0.

Symantec C++ 7.2 


Ventajas
- Entorno de desarrollo altamente integrado y con amplias posibilidades de arrastrar y soltar.
- Compilación distribuida mediante Netbuild.


Inconvenientes 
- La instalación completa ocupa casi 300 MB.
- Rendimiento de los ejecutables generados por debajo de la media.

Nuestro reciente análisis de Symantec C++ 7.2 (véase el artículo Las diferencias de Symantec C++ en el número 14 de BYTE España) señaló acertadamente que Symantec ha sido siempre el «otro» proveedor de C++, por detrás de Microsoft y Borland.
Y ello a pesar de los aciertos de Symantec en la introducción de significativas innovaciones en el entorno integrado de desarrollo y depuración (IDDE) de su compilador.

Una de estas innovaciones es Netbuild, un entorno de compilación distribuida que permite convertir otras máquinas de la red en servidores de compilación.
Netbuild resulta especialmente útil en grandes proyectos o cuando puede realizarse la compilación en horas muertas.

La primera vez que se cargan archivos fuente en el proyecto, el IDDE de Symantec C++ efectúa un preanálisis del código fuente de la aplicación.
El preanalizador detecta si ha habido cambios en el código fuente y vuelve a efectuar el análisis si es necesario.
Al igual que make , sólo analiza los archivos que han cambiado.

Los resultados del preanálisis se pasan a los componentes de manejo de texto del IDDE, lo que permite utilizar una combinación de hojeador y editor de tres paneles al estilo Smalltalk.
Las posibilidades de edición de este sistema de tres paneles son completas: cuando se busca una función de miembro dentro de una clase, se abre una ventana de edición de nivel inferior.
Si se efectúan cambios, se actualiza el archivo de código fuente adecuado.

El preanálisis se efectúa como tarea de fondo, pero puede llegar a ser molesto si se empieza a trabajar en una aplicación MFC y se está ejecutando el software a partir de un CD.
Dependiendo de la velocidad del sistema, el preanalizador puede tardar algún tiempo en leer todos los archivos Include de MFC (En efecto, Symantec proporciona soporte para MFC; las versiones 2.53 y 3.2 están incluidas en el paquete).

Symantec también resulta innovador al proporcionar un lenguaje de script --Symantec BASIC-- que permite automatizar muchas de las características del IDDE (particularmente el editor), que de otro modo tendrían que activarse mediante menús y barras de herramientas.

Como hace la Component Gallery de Microsoft cuando proporciona un servicio de envoltorio para construir automáticamente una interfaz de clases C++ para los OCX, VBXExpress de Symantec construye automáticamente una clase envoltorio C++ alrededor de un VBX.

El objetivo de cobertura de Symantec es casi tan amplio como el de Watcom.
Desde el IDDE pueden producirse ejecutables y DLL para DOS de 16 y 32 bits, así como para Windows 3.1, Windows para Grupos de Trabajo 3.11, Windows 95 y Windows NT.
Symantec y Microsoft son los dos únicos fabricantes de este análisis que proporcionan un producto Macintosh; no obstante el producto de Microsoft es un sistema de desarrollo cruzado, mientras que el de Symantec es Mac nativo.

Watcom C/C++ 10.5 


Ventajas
- Soporta diversidad de plataformas tanto host como de destino.
- Salida del compilador de mucha calidad.


Inconvenientes
- Tiene pocas herramientas expertas o asistentes (wizards).
- El hojeador y algunas otras herramientas están poco integradas en el entorno de desarrollo.

La mayor fuerza de Watcom reside en sus posibilidades de soporte de múltiples plataformas.
Desde un único IDE, pueden generarse ejecutables para DOS (16 bits y extendido), todas las plataformas Windows, OS/2 (16 y 32 bits) y NetWare.
Su soporte de plataformas host es también amplio; el IDE de Watcom puede ejecutarse desde Windows de 16 bits, Windows NT y 95, y OS/2.
Watcom C/C++ ha sido desde su comienzo la plataforma base de nuestros benchmarks BYTEmark.

El paquete Watcom aterriza con el habitual séquito de herramientas de soporte: depurador, perfilador, analizador del heap , espía y un depurador post-mortem denominado Dr.

Watcom.
También hay editores de imágenes y de diálogos que pueden iniciarse por sí mismos o arropados por el editor de recursos.
La política de Watcom difiere de la de Microsoft y Symantec.
Mientras estas compañías han trasladado los principales componentes de desarrollo a un único IDE que actúa como paraguas, los componentes de Watcom consisten en ejecutables independientes que el IDE inicia según se necesitan.

Antes de la versión 10.5, Watcom C/C++ carecía de un constructor visual de aplicaciones; ahora dispone de Visual Programmer de Blue Sky.
Aunque no tan robusto como, por ejemplo, Visual Basic, Visual Programmer proporciona un mecanismo para poblar las aplicaciones con objetos de tipo recurso --botones, mapas de bits, menús, etc.-- al mismo tiempo que crea el código fuente (sobre MFC, que se incluye con el compilador) conforme se especifican las funciones de los componentes.
Nos ha llamado especialmente la atención la característica de captura de menús y recuadros de diálogo, una especie de herramienta de reutilización.
Primero se activa la captura de recuadros de diálogo, luego se inicia otra aplicación; cada vez que el puntero se desplace a un recuadro de diálogo, el cursor se convertirá en una estilizada mano con un dedo extendido.
Al efectuar un doble clic, una copia del recuadro de diálogo se transfiere al editor de recuadros de diálogo de Visual Programmer, listo para ser incluido en la aplicación.

Watcom obtiene puntuaciones altas en el soporte de múltiples plataformas.
Y la calidad de los cálculos en coma flotante es superior al del resto de los productos analizados aquí.

Qué y cómo probar 

Actualmente, la compilación real es una pequeña parte de la construcción de una aplicación y además es cada vez más difícil de medir.
Nuevas tecnologías, como la de Netbuild de Symantec, por ejemplo, hacen aún más difíciles las comparaciones.

Por ello, nuestras pruebas se han centrado en la calidad del código producido por los compiladores.
Se seleccionaron dos programas, nuestro propio BYTEmark y la versión 7 del lenguaje de programación J de dominio público.
BYTEmark es una colección de diez pruebas para CPU, FPU, caché y memoria del sistema; J es un completo intérprete, última versión de dominio libre del código fuente del lenguaje J antes de que se convirtiera en un paquete comercial (para más información sobre este lenguaje véase el artículo Las matemáticas según J que fue publicado en el número 12 de BYTE España).

Se envió el código fuente de BYTEmark a cada uno de los fabricantes pidiéndoles que determinasen los mejores valores de optimización para el programa.
Se compilaron las pruebas conforme a los valores suministrados por los fabricantes, y los ejecutables resultantes se ejecutaron en un sistema Intergraph trabajando con Windows NT 3.51 y procesadores duales Pentium Pro a 150 MHz (Ninguna prueba utilizaba multihebras, de manera que el procesador adicional no tuvo ningún efecto).

Los resultados de las pruebas aparecen en el gráfico.
Los números de los índices BYTEmark los calcula el programa automáticamente.

Para la prueba de J, se introdujo un corto script de programación lineal (corto para los estándares de J), que ejecutaba el algoritmo simplex.
También se introdujo un script para calcular el determinante de una matriz y lo aplicamos a una matriz de 8 x 8.
Observe que aunque para este artículo no se ha analizado formalmente el producto de Borland, a efectos de comparación se han incluido los resultados de la versión 4.53 de su compilador.

Si basáramos nuestras conclusiones exclusivamente en los resultados de BYTEmark, Microsoft sería el claro ganador y Watcom le seguiría muy de cerca.
El benchmark J, sin embargo, ofrece una perspectiva diferente.

Irónicamente, a Borland le fue mejor que al resto de fabricantes.
La diferencia de rendimiento de las dos pruebas está causada probablemente por la diferencia de modelos de código que presentan.
Las pruebas de BYTEmark tienden a ser pequeñas rutinas que se ejecutan repetidamente; el flujo de ejecución del intérprete J está menos localizado.

Según el caso 

La decisión de qué entorno C++ comprar depende en gran medida del objetivo.
Si se desean cubrir las plataformas de la familia Intel, recomendamos Watcom.
A pesar de que el rendimiento en enteros ha bajado comparado con los otros compiladores, continúa dando buenos resultados con el código de coma flotante.
El nuevo Visual Programmer hace que el desarrollo de aplicaciones Windows con el paquete Watcom sea un reto menos arduo.
Muy cerca de Watcom aparece Symantec, que cubre casi las mismas plataformas, proporciona un sistema de desarrollo bien planificado y está diseñado por un equipo de ingenieros que nos sorprende continuamente con sus imaginativas extensiones del IDE.

Para los que saben que han de trabajar en plataformas Windows de 32 bits, nuestra recomendación es Visual C++ de Microsoft.
Su rendimiento global (combinando todos los resultados de los benchmarks) es el mejor.

Además, la galería de componentes, que ya es en la actualidad un útil mecanismo para incorporar rápidamente OCX a una aplicación C++, evolucionará para convertirse en un sistema de gestión de objetos más completo.

Los compiladores C++ se comportan de forma distinta según el modelo de código.
Microsoft Visual C++ 4.0 es más rápido en las pruebas BYTEmark en modalidad nativa basada en algoritmos.
Borland C++ 4.53 es el mejor al compilar dos scripts escritos en el lenguaje de dominio público J, que presenta un flujo de código menos localizado.

Los índices se refieren al rendimiento de un sistema Dell XPS P90 Pentium a 90 MHz (que da un resultado de 1.0 en todas las pruebas).

Con la excepción de MetaWare HighC/C++, los compiladores ofrecen vistas de la aplicación que se está desarrollando en varios paneles basados en Windows.

Rick Grehan (rick_g@bix.com) es editor técnico sénior de BYTE y desarrolló el conjunto de benchmarks de BYTE.
Tiene un M.S. de matemáticas/informática.

Claves para las empresas: tecnologías de acceso de datos 

Los métodos de acceso de datos como ODBC (Conectividad de bases de datos abiertas) de Microsoft o Data Access Language de Apple proporcionan una capa común por encima de bases de datos locales pequeñas y motores SQL basados en servidor, pero la integración de estas tecnologías de bajo nivel en un entorno de desarrollo de alto nivel requiere componentes adicionales, como Data Access Objects (DAO) de Microsoft y Database Engine (BDE) de Borland.

DAO consta de objetos que forman la interfaz entre los programadores y el motor Jet de Microsoft (el gestor de base de datos subyacente a Microsoft Access y Visual Basic).
DAO 3.0, suministrado con Visual C++ 4.0, está implementado como una DLL que cumple con las especificaciones de Common Object Model (COM) y trabaja sólo en Windows de 32 bits.
Proporciona, a través de Jet, un acceso rápido en 32 bits a datos Access nativos utilizando los mismos objetos simples de datos abstractos que se encuentran en VB.
Microsoft Foundation Classes (MFC) 4.0, incluido en Visual C++ 4.0, envuelve los objetos DAO en clases C++ de estructura similar a las que encapsulan ODBC, con lo que se proporciona a los programadores de MFC un camino más o menos coherente a ambas tecnologías.

Al igual que Jet, BDE es un motor de base de datos de alta velocidad y objeto COM, que sirve de base a una colección de herramientas de desarrollo y paquetes comerciales (Delphi de Borland, Paradox, dBase y Quattro Pro) y simplifica la compartición de los datos.
BDE proporciona acceso a ODBC y acceso nativo a unas pocas bases de datos SQL a través de SQL Links de Borland.

Utilizando Borland C++ 4.5x, los programadores llegan, vía BDE, a esas fuentes de datos, mediante llamadas API C a la DLL BDE (API de bases de datos integradas de Borland, o IDAPI).
Borland C++ 5.0 integra BDE envolviendo las llamadas IDAPI con clases C++ diseñadas utilizando el modelo de objetos de datos de Delphi.
Watcom y Symantec proporcionan soporte ODBC directo a través de las versiones de 16 y 32 bits de MFC incluidas en sus paquetes.

Tanto Borland como Microsoft utilizan componentes que cumplen con Common Object Model (COM) para acceder a sus motores de bases de datos de alta velocidad.

Borland C++ 5.0 estaba calentando motores en la rampa de lanzamiento mientras nosotros estábamos trabajando en esta comparativo.
Aunque Borland 4.53 estaba disponible (y de hecho lo hemos utilizado en nuestros benchmarks), hemos preferido no realizar un análisis oficial.
En lugar de ello, presentamos a continuación un preanálisis de la versión 5.0, basado en nuestra experiencia práctica con la versión beta. &lsqb;Borland C++ 4.53 es un parche de la versión 4.52 disponible gratuitamente en la BBS de Borland&rsqb;.

El nuevo Borland C++ 5.0 promete ir en la dirección de los entornos de desarrollo integrado (como los de Symantec y Microsoft) y dejar el enfoque de ejecutables separados alrededor del IDE.
También incluirá más componentes en el IDE, proporcionará una verdadera compilación de fondo y permitirá todavía crear aplicaciones para plataformas de 16 bits (Windows y DOS) gracias a la inclusión de Borland C++ 4.52.
La nueva versión incluirá también la herramienta de detección de errores CodeGuard (16 y 32 bits); PVCS Version Manager, una versión especial del software de control de versiones de Intersolv; InstallShield Express, versión también especial del generador de instalaciones; y diversas herramientas para el desarrollo de aplicaciones Java (el compilador AppAccelerator, el asistente AppExpert y el depurador Borland Debugger for Java).

La biblioteca ObjectWindows (OWL) de Borland saltará de la versión 2.5 (la versión actual incluida con el compilador 4.53) a la versión 5.0, reforzada con diversos controles tipo Windows 95.
Sin embargo, OWL no será el único framework de aplicaciones reconocido por el compilador 5.0.
Borland C++ 5.0 soportará la última versión de MFC e incluirá la biblioteca C++ estándar de Rogue Wave, que incluye la biblioteca de plantillas ( templates ) estándar.

El IDE de Borland C++ 5.0 estará también equipado con un lenguaje de script .

Según Borland, ObjectScripting es muy similar a C++, lo que significa que los programadores de C++ lo tendrán fácil y no se verán forzados a cambiar el esquema mental para trabajar con un clónico de BASIC.
Borland ha prometido que este lenguaje proporcionará acceso a la mayoría de las interioridades del IDE, más allá de las posibilidades del lenguaje de script encontradas en Symantec C++.
Por ejemplo, podrá crearse un script que localice automáticamente todos los archivos fuente de un directorio determinado, los agrupe en un proyecto y a continuación cree el proyecto.

Con C++ 5.0, Borland incluirá el paquete de bases de datos como parte del paquete del compilador.
De esta forma, los desarrolladores de compilador tendrán acceso al motor de base de datos de Borland.(Véase el recuadro Enfoque Tecnológico ).
