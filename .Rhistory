install.packages("rcompanion")
Acronymes = read.csv("Acronymes.csv", sep="\t", header=TRUE, encoding = "UTF-
nymes$Voiced)
## avec ce graphique, je pense que quand un acronyme n'est pas ambigue, n'est pas voiced. Mais en ce qui concerne les "yes", je n'observe aucune "relation"
# table(Acronymes$Ambiguity, Acronymes$Voiced)
## avec ce graphique, je pense que quand un acronyme n'est pas ambigue, n'est pas voiced. Mais en ce qui concerne les "yes", je n'observe aucune "relation"
## rows v1 columns v2
## question 1
# prop.table(table(Acronymes$Ambiguity, Acronymes$Voiced), margin = 1)
load("~/Documentos/M1-LITL/S08/stats/.RData")
View(Acronymes)
# valeurs qui sont en excédent (No amb+no voiced et yes amb et yes voiced)ou en déficit (yes amb + no voiced et no yes voiced et no amb).
# les ecarts sont faibles toujours (un peu moins dans le non+non)
## question 4 non dispo
## question 5
# summary(Acronymes$Typicity)
# table(Acronymes$Ambiguity, Acronymes$Typicity)
# prop.table(table(Acronymes$Ambiguity, Acronymes$Typicity))
# chisq.test(Acronymes$Ambiguity, Acronymes$Typicity)
#6.996e-13 il y a bcp de liason :o
## dernier
summary(Acronymes$Type.of.acronyms)
# les ecarts sont faibles toujours (un peu moins dans le non+non)
## question 4 non dispo
## question 5
# summary(Acronymes$Typicity)
# table(Acronymes$Ambiguity, Acronymes$Typicity)
# prop.table(table(Acronymes$Ambiguity, Acronymes$Typicity))
# chisq.test(Acronymes$Ambiguity, Acronymes$Typicity)
#6.996e-13 il y a bcp de liason :o
## dernier
# summary(Acronymes$Type.of.acronyms)
Acronymes[substr(Acronymes$Items, 1, 1) == "A",]
# les ecarts sont faibles toujours (un peu moins dans le non+non)
## question 4 non dispo
## question 5
# summary(Acronymes$Typicity)
# table(Acronymes$Ambiguity, Acronymes$Typicity)
# prop.table(table(Acronymes$Ambiguity, Acronymes$Typicity))
# chisq.test(Acronymes$Ambiguity, Acronymes$Typicity)
#6.996e-13 il y a bcp de liason :o
## dernier
# summary(Acronymes$Type.of.acronyms)
Acronymes[substr(Acronymes$Items, 1, 1) == "A|E|I|O|U",]
## question 4 non dispo
## question 5
# summary(Acronymes$Typicity)
# table(Acronymes$Ambiguity, Acronymes$Typicity)
# prop.table(table(Acronymes$Ambiguity, Acronymes$Typicity))
# chisq.test(Acronymes$Ambiguity, Acronymes$Typicity)
#6.996e-13 il y a bcp de liason :o
## dernier
# summary(Acronymes$Type.of.acronyms)
# Acronymes[substr(Acronymes$Items, 1, 1) == "A|E|I|O|U",]
Acronymes[grepl("A", Acronymes$Items),]
Acronymess > filter(str_detect(Items, "A") == TRUE)
## question 4 non dispo
## question 5
# summary(Acronymes$Typicity)
# table(Acronymes$Ambiguity, Acronymes$Typicity)
# prop.table(table(Acronymes$Ambiguity, Acronymes$Typicity))
# chisq.test(Acronymes$Ambiguity, Acronymes$Typicity)
#6.996e-13 il y a bcp de liason :o
## dernier
# summary(Acronymes$Type.of.acronyms)
# Acronymes[substr(Acronymes$Items, 1, 1) == "A|E|I|O|U",]
Acronymes[grepl("A", Acronymes$Items),]
## question 4 non dispo
## question 5
# summary(Acronymes$Typicity)
# table(Acronymes$Ambiguity, Acronymes$Typicity)
# prop.table(table(Acronymes$Ambiguity, Acronymes$Typicity))
# chisq.test(Acronymes$Ambiguity, Acronymes$Typicity)
#6.996e-13 il y a bcp de liason :o
## dernier
# summary(Acronymes$Type.of.acronyms)
# Acronymes[substr(Acronymes$Items, 1, 1) == "A|E|I|O|U",]
Acronymes[grepl("A|E|I|O|U", Acronymes$Items),]
filter(Acronymes[grepl("A|E|I|O|U", Acronymes$Items),])
Acronymes.filter(Acronymes[grepl("A|E|I|O|U", Acronymes$Items),])
## question 4 non dispo
## question 5
# summary(Acronymes$Typicity)
# table(Acronymes$Ambiguity, Acronymes$Typicity)
# prop.table(table(Acronymes$Ambiguity, Acronymes$Typicity))
# chisq.test(Acronymes$Ambiguity, Acronymes$Typicity)
#6.996e-13 il y a bcp de liason :o
## dernier
# summary(Acronymes$Type.of.acronyms)
# Acronymes[substr(Acronymes$Items, 1, 1) == "A|E|I|O|U",]
filtered = Acronymes[grepl("A|E|I|O|U", Acronymes$Items),]
View(Acronymes)
## question 5
# summary(Acronymes$Typicity)
# table(Acronymes$Ambiguity, Acronymes$Typicity)
# prop.table(table(Acronymes$Ambiguity, Acronymes$Typicity))
# chisq.test(Acronymes$Ambiguity, Acronymes$Typicity)
#6.996e-13 il y a bcp de liason :o
## dernier
# summary(Acronymes$Type.of.acronyms)
# Acronymes[substr(Acronymes$Items, 1, 1) == "A|E|I|O|U",]
# Acronymes$voyelle <- Acronymes[grepl("A|E|I|O|U", Acronymes$Items),]
Acronymes[grep("^A|E|I|O|U", as.character(Acronymes$Items)),]
## question 5
# summary(Acronymes$Typicity)
# table(Acronymes$Ambiguity, Acronymes$Typicity)
# prop.table(table(Acronymes$Ambiguity, Acronymes$Typicity))
# chisq.test(Acronymes$Ambiguity, Acronymes$Typicity)
#6.996e-13 il y a bcp de liason :o
## dernier
# summary(Acronymes$Type.of.acronyms)
# Acronymes[substr(Acronymes$Items, 1, 1) == "A|E|I|O|U",]
# Acronymes$voyelle <- Acronymes[grepl("A|E|I|O|U", Acronymes$Items),]
filt = Acronymes[grep("^A|E|I|O|U", as.character(Acronymes$Items)),]
View(filt)
## question 5
# summary(Acronymes$Typicity)
# table(Acronymes$Ambiguity, Acronymes$Typicity)
# prop.table(table(Acronymes$Ambiguity, Acronymes$Typicity))
# chisq.test(Acronymes$Ambiguity, Acronymes$Typicity)
#6.996e-13 il y a bcp de liason :o
## dernier
# summary(Acronymes$Type.of.acronyms)
# Acronymes[substr(Acronymes$Items, 1, 1) == "A|E|I|O|U",]
# Acronymes$voyelle <- Acronymes[grepl("A|E|I|O|U", Acronymes$Items),]
filt = Acronymes[grep("^[A|E|I|O|U]", as.character(Acronymes$Items)),]
View(filt)
H1_manual_annotated...H1_manual_annotated.csv <- read.csv("~/Descargas/H1_manual_annotated - H1_manual_annotated.csv.csv")
View(H1_manual_annotated...H1_manual_annotated.csv)
View(H1_manual_annotated...H1_manual_annotated.csv)
table = table(H1_manual_annotated...H1_manual_annotated.csv$presence)
table
load("~/Documentos/M1-LITL/S08/stats/partiel.RData")
load("~/Documentos/M1-LITL/S08/stats/partiel.RData")
# Liaison entre SimilariteW2V et la relation lexicale == TRUE
subset_Evolex <- subset_Evolex[subset_Evolex$classique == TRUE,]
View(subset_Evolex)
boxplot(subset_Evolex$SimilariteW2V ~ subset_Evolex$Relation, main="Liason entre les relations classiques et la SimilariteW2V", xlab = "relation classique", ylab = "SimilariteW2V")
summary(subset_Evolex$SimilariteW2V)
hyp <- subset_Evolex[subset_Evolex$Relation == "cohyponyme",]
summary(hyp$SimilariteW2V)
ant <- subset_Evolex[subset_Evolex$Relation == "antonyme",]
summary(ant$SimilariteW2V)
syn <- subset_Evolex[subset_Evolex$Relation == "synonyme",]
summary(syn$SimilariteW2V)
median_relation_ordered
barplot(ant)
hist(ant)
barplot(ant$SimilariteW2V)
plot(ant$SimilariteW2V)
boxplot(subset_Evolex$SimilariteW2V ~ subset_Evolex$Relation, main="Liason entre les relations classiques et la SimilariteW2V", xlab = "relation classique", ylab = "SimilariteW2V")
aggregate(Evolex$SimilariteW2V, list(Evolex$Relation), "mean")
aggregate(V1, list(V5), "mean")
aggregate(V1, list(V5), "median")
cor.test(subset_Evolex$SimilariteW2V, subset_Evolex$Relation, method = "s")
cor.test(subset_Evolex$Relation, subset_Evolex$SimilariteW2V, method = "s")
wilcox.test(na.omit(subset_Evolex$Relation)~subset_Evolex$SimilariteW2V)
wilcox.test(subset_Evolex$Relation~subset_Evolex$SimilariteW2V)
aov(subset_Evolex$SimilariteW2V ~ subset_Evolex$Relation)
a = aov(subset_Evolex$SimilariteW2V ~ subset_Evolex$Relation)
summary(a)
TukeyHSD(a)
table(TukeyHSD(a))
data.frame(TukeyHSD(a))
summary(a)
TukeyHSD(a)
load("~/Documentos/M1-LITL/S08/stats/partiel.RData")
boxplot(Evolex$Nreponse, main="Distribution Nreponse")
barplot(sort(table(Evolex$Relation), decreasing = TRUE), main="Distribution des relations", xlab = "relations", ylab = "effectifs")
barplot(sort(table(Evolex$Relation)), main="Distribution des relations", xlab = "relations", ylab = "effectifs")
barplot(sort(table(Evolex$Relation), decreasing = TRUE), main="Distribution des relations", xlab = "relations", ylab = "effectifs")
all = read.csv("all_data_annotation_file.csv", header=TRUE, encoding = "UTF-8", stringsAsFactors=TRUE)
load("~/MarRelEs/Analysis.RData")
setwd("~/MarRelEs")
all = read.csv("all_data_annotation_file.csv", header=TRUE, encoding = "UTF-8", stringsAsFactors=TRUE)
subset3 <- subset(all, annotation == "« OUI »")
##
summary(subset3$id)
##
p = data.frame(summary(subset3$id))
View(p)
